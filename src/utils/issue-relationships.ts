import { Version2Client } from "jira.js/version2";

export interface RelatedIssue {
    key: string;
    summary: string;
    status: string;
    type: string;
    url: string;
    priority?: string;
}

export interface IssueStructure {
    current: RelatedIssue;
    parent?: RelatedIssue;
    epic?: RelatedIssue;
    subtasks: RelatedIssue[];
    siblings: RelatedIssue[];
}

/**
 * –°–æ–∑–¥–∞–µ—Ç URL –¥–ª—è —Ç–∏–∫–µ—Ç–∞ Jira
 */
function createJiraUrl(host: string, issueKey: string): string {
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –µ—Å–ª–∏ –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º https
    const cleanHost = host.replace(/^https?:\/\//, "");
    return `https://${cleanHost}/browse/${issueKey}`;
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Jira issue –≤ RelatedIssue
 */
function convertToRelatedIssue(issue: any, host: string): RelatedIssue {
    return {
        key: issue.key,
        summary: issue.fields?.summary || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
        status: issue.fields?.status?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        type: issue.fields?.issuetype?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        url: createJiraUrl(host, issue.key),
        priority: issue.fields?.priority?.name,
    };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è —Ç–∏–∫–µ—Ç–∞
 */
export async function getIssueStructure(
    jira: Version2Client,
    issueKey: string,
    host: string
): Promise<IssueStructure> {
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–∫–µ—Ç —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    const issue = await jira.issues.getIssue({
        issueIdOrKey: issueKey,
        expand: ["parent", "subtasks", "issuelinks"],
        fields: ["*all"],
    });

    const current = convertToRelatedIssue(issue, host);
    const structure: IssueStructure = {
        current,
        subtasks: [],
        siblings: [],
    };

    // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞
    if (issue.fields?.parent) {
        structure.parent = convertToRelatedIssue(issue.fields.parent, host);
    }

    // –ü–æ–¥–∑–∞–¥–∞—á–∏
    if (issue.fields?.subtasks && Array.isArray(issue.fields.subtasks)) {
        structure.subtasks = issue.fields.subtasks.map((subtask: any) =>
            convertToRelatedIssue(subtask, host)
        );
    }

    // –ü–æ–∏—Å–∫ —ç–ø–∏–∫–∞ –∏ –¥—Ä—É–≥–∏—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –ø–æ–ª—è
    // Epic Link –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ customfield_10014 –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—è—Ö
    const epicField = findEpicField(issue.fields);
    if (epicField) {
        try {
            if (typeof epicField === "string") {
                // Epic key –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
                const epicIssue = await jira.issues.getIssue({
                    issueIdOrKey: epicField,
                    fields: ["summary", "status", "issuetype", "priority"],
                });
                structure.epic = convertToRelatedIssue(epicIssue, host);
            } else if (epicField.key) {
                // Epic –∫–∞–∫ –æ–±—ä–µ–∫—Ç
                structure.epic = convertToRelatedIssue(epicField, host);
            }
        } catch (error) {
            console.error("Error fetching epic:", error);
        }
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞, –ø–æ–ª—É—á–∏–º –µ—ë –ø–æ–¥–∑–∞–¥–∞—á–∏ (—Å–∏–±–ª–∏–Ω–≥–∏)
    if (structure.parent) {
        try {
            const parentIssue = await jira.issues.getIssue({
                issueIdOrKey: structure.parent.key,
                expand: ["subtasks"],
                fields: ["subtasks"],
            });

            if (
                parentIssue.fields?.subtasks &&
                Array.isArray(parentIssue.fields.subtasks)
            ) {
                structure.siblings = parentIssue.fields.subtasks
                    .filter((subtask: any) => subtask.key !== issueKey) // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É
                    .map((subtask: any) =>
                        convertToRelatedIssue(subtask, host)
                    );
            }
        } catch (error) {
            console.error("Error fetching parent subtasks:", error);
        }
    }

    return structure;
}

/**
 * –ò—â–µ—Ç –ø–æ–ª–µ Epic Link –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö
 */
function findEpicField(fields: any): any {
    // –û–±—ã—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã Epic Link –ø–æ–ª–µ–π
    const epicFields = [
        "customfield_10014", // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–ª–µ Epic Link
        "customfield_10006", // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        "epic",
        "epicLink",
        "customfield_10200", // –ï—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç
    ];

    for (const fieldName of epicFields) {
        if (fields[fieldName]) {
            return fields[fieldName];
        }
    }

    return null;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
 */
export function formatIssueStructure(structure: IssueStructure): string {
    let result = `## üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n\n`;

    // –≠–ø–∏–∫
    if (structure.epic) {
        result += `### üéØ **–≠–ü–ò–ö**\n`;
        result += `**[${structure.epic.key}: ${structure.epic.summary}](${structure.epic.url})**\n`;
        result += `- **–¢–∏–ø:** ${structure.epic.type}\n`;
        result += `- **–°—Ç–∞—Ç—É—Å:** ${structure.epic.status}\n`;
        if (structure.epic.priority) {
            result += `- **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** ${structure.epic.priority}\n`;
        }
        result += `\n---\n\n`;
    }

    // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∑–∞–¥–∞—á–∞
    if (structure.parent) {
        result += `### üìö **–†–û–î–ò–¢–ï–õ–¨–°–ö–ê–Ø –ó–ê–î–ê–ß–ê**\n`;
        result += `**[${structure.parent.key}: ${structure.parent.summary}](${structure.parent.url})**\n`;
        result += `- **–¢–∏–ø:** ${structure.parent.type}\n`;
        result += `- **–°—Ç–∞—Ç—É—Å:** ${structure.parent.status}\n`;
        if (structure.parent.priority) {
            result += `- **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** ${structure.parent.priority}\n`;
        }
        result += `\n---\n\n`;
    }

    // –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞
    result += `### üéØ **–¢–ï–ö–£–©–ê–Ø –ó–ê–î–ê–ß–ê**\n`;
    result += `**[${structure.current.key}: ${structure.current.summary}](${structure.current.url})**\n`;
    result += `- **–¢–∏–ø:** ${structure.current.type}\n`;
    result += `- **–°—Ç–∞—Ç—É—Å:** ${structure.current.status}\n`;
    if (structure.current.priority) {
        result += `- **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** ${structure.current.priority}\n`;
    }

    // –°–∏–±–ª–∏–Ω–≥–∏ (–¥—Ä—É–≥–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∑–∞–¥–∞—á–∏)
    if (structure.siblings.length > 0) {
        result += `\n### üîó **–°–í–Ø–ó–ê–ù–ù–´–ï –ü–û–î–ó–ê–î–ê–ß–ò** (${structure.siblings.length})\n`;
        structure.siblings.forEach((sibling, index) => {
            const statusIcon = getStatusIcon(sibling.status);
            result += `${index + 1}. **[${sibling.key}: ${sibling.summary}](${
                sibling.url
            })**\n`;
            result += `   - **–°—Ç–∞—Ç—É—Å:** ${statusIcon} ${sibling.status} | **–¢–∏–ø:** ${sibling.type}\n`;
        });
        result += `\n`;
    }

    // –ü–æ–¥–∑–∞–¥–∞—á–∏ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏
    if (structure.subtasks.length > 0) {
        result += `### üîß **–ü–û–î–ó–ê–î–ê–ß–ò** (${structure.subtasks.length})\n`;
        structure.subtasks.forEach((subtask, index) => {
            const statusIcon = getStatusIcon(subtask.status);
            result += `${index + 1}. **[${subtask.key}: ${subtask.summary}](${
                subtask.url
            })**\n`;
            result += `   - **–°—Ç–∞—Ç—É—Å:** ${statusIcon} ${subtask.status} | **–¢–∏–ø:** ${subtask.type}\n`;
        });
    }

    return result;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É —Å—Ç–∞—Ç—É—Å–∞
 */
function getStatusIcon(status: string): string {
    const lowerStatus = status.toLowerCase();

    if (
        lowerStatus.includes("–≥–æ—Ç–æ–≤–æ") ||
        lowerStatus.includes("–∑–∞–∫—Ä—ã—Ç") ||
        lowerStatus.includes("done") ||
        lowerStatus.includes("closed")
    ) {
        return "‚úÖ";
    }
    if (
        lowerStatus.includes("—Ä–∞–±–æ—Ç–µ") ||
        lowerStatus.includes("progress") ||
        lowerStatus.includes("—Ä–∞–∑—Ä–∞–±–æ—Ç")
    ) {
        return "üîÑ";
    }
    if (lowerStatus.includes("review") || lowerStatus.includes("—Ä–µ–≤—å—é")) {
        return "üëÅÔ∏è";
    }
    if (lowerStatus.includes("release") || lowerStatus.includes("—Ä–µ–ª–∏–∑")) {
        return "üöÄ";
    }
    if (lowerStatus.includes("test") || lowerStatus.includes("—Ç–µ—Å—Ç")) {
        return "üß™";
    }

    return "üìã"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
}
